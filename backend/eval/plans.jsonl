{"prompt": "Deploy nginx with 2 replicas", "plan": {"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx"}, "duration_s": 2.483020067214966}
{"prompt": "Create a deployment named myapp using almas07/hello-llm:latest with 3 replicas", "plan": {"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: almas07/hello-llm:latest"}, "duration_s": 2.640327215194702}
{"prompt": "Deploy a new app called websvc using nginx image with 2 replicas in default namespace", "plan": {"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: websvc\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: websvc\n  template:\n    metadata:\n      labels:\n        app: websvc\n    spec:\n      containers:\n      - name: websvc\n        image: nginx"}, "duration_s": 2.456866979598999}
{"prompt": "Create a deployment named redis-store using redis:6 with 1 replica", "plan": {"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-store\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis-store\n  template:\n    metadata:\n      labels:\n        app: redis-store\n    spec:\n      containers:\n      - name: redis-store\n        image: redis:6"}, "duration_s": 2.661184549331665}
{"prompt": "Scale demo-app to 3 replicas", "plan": {"type": "scale", "name": "demo-app", "replicas": 3}, "duration_s": 1.1389954090118408}
{"prompt": "Scale nginx-deploy to 5 replicas", "plan": {"type": "scale", "name": "nginx-deploy", "replicas": 5}, "duration_s": 1.3198411464691162}
{"prompt": "Enable autoscaling for myapp from 2 to 6 replicas at 70% CPU", "plan": {"type": "autoscale", "name": "myapp", "min_replicas": 2, "max_replicas": 6, "target_cpu": 70}, "duration_s": 1.4252490997314453}
{"prompt": "Autoscale based on current cpu usage for backend", "plan": {"type": "autoscale_based_on_metrics", "name": "backend", "metric": "cpu"}, "duration_s": 1.2352409362792969}
{"prompt": "Optimize latency for payment-service", "plan": {"type": "optimize_latency", "name": "payment-service"}, "duration_s": 1.3303005695343018}
{"prompt": "Optimize latency for unique-app-demo", "plan": {"type": "optimize_latency", "name": "unique-app-demo"}, "duration_s": 1.5356402397155762}
{"prompt": "Analyze metrics for myapp in default namespace", "plan": {"type": "analyze_metrics", "name": "myapp", "namespace": "default"}, "duration_s": 1.0231869220733643}
{"prompt": "Show CPU and memory usage for nginx-deploy", "plan": {"type": "cli", "content": "kubectl top pod -l app=nginx-deploy"}, "duration_s": 1.5372681617736816}
{"prompt": "Analyze CPU usage over time for unique-app-demo", "plan": {"type": "metrics_analysis", "metric": "cpu", "minutes": 10, "step": 15}, "duration_s": 1.3331727981567383}
{"prompt": "Expose deployment myapp via a LoadBalancer service on port 80", "plan": {"type": "yaml", "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: myapp-service\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 80\n  selector:\n    app: myapp"}, "duration_s": 2.661680221557617}
{"prompt": "Provide YAML for a service exposing nginx on port 80", "plan": {"type": "yaml", "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: ClusterIP\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80"}, "duration_s": 2.455871105194092}
{"prompt": "Fix issues in payment-service in staging", "plan": {"type": "fix_deployment_issues", "name": "payment-service", "namespace": "staging"}, "duration_s": 1.2281732559204102}
{"prompt": "Fix issues in unique-app-demo in default namespace", "plan": {"type": "fix_deployment_issues", "name": "unique-app-demo", "namespace": "default"}, "duration_s": 1.124525785446167}
{"prompt": "Diagnose and fix webapp in default namespace", "plan": {"type": "fix_deployment_issues", "name": "webapp", "namespace": "default"}, "duration_s": 1.1266798973083496}
{"prompt": "Deploy webapp, expose service and enable autoscaler", "plan": [{"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webapp\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: webapp\n  template:\n    metadata:\n      labels:\n        app: webapp\n    spec:\n      containers:\n      - name: webapp\n        image: webapp:latest"}, {"type": "cli", "content": "kubectl expose deployment webapp --type=LoadBalancer --port=80"}, {"type": "autoscale", "name": "webapp", "min_replicas": 1, "max_replicas": 3, "target_cpu": 50}], "duration_s": 3.581433057785034}
{"prompt": "Deploy an app named multi-step-demo using nginx image and then expose it and enable autoscaling", "plan": [{"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: multi-step-demo\nspec:\n  selector:\n    matchLabels:\n      app: multi-step-demo\n  template:\n    metadata:\n      labels:\n        app: multi-step-demo\n    spec:\n      containers:\n      - name: nginx\n        image: nginx"}, {"type": "cli", "content": "kubectl expose deployment multi-step-demo --port=80 --target-port=80 --name=multi-step-demo-service"}, {"type": "autoscale", "name": "multi-step-demo", "min_replicas": 1, "max_replicas": 3, "target_cpu": 50}], "duration_s": 3.382112503051758}
{"prompt": "Show externally exposed services", "plan": {"type": "show_exposed_services"}, "duration_s": 1.022367238998413}
{"prompt": "List all deployments in default namespace", "plan": {"type": "cli", "content": "kubectl get deployments --namespace=default"}, "duration_s": 0.9731457233428955}
{"prompt": "List pods in default namespace", "plan": {"type": "cli", "content": "kubectl get pods --namespace=default"}, "duration_s": 1.4842865467071533}
{"prompt": "Run kubectl get pods", "plan": {"type": "cli", "content": "kubectl get pods"}, "duration_s": 1.6370441913604736}
{"prompt": "Get logs for pod demo-app-abc123", "plan": {"type": "cli", "content": "kubectl logs demo-app-abc123"}, "duration_s": 0.8835692405700684}
{"prompt": "Provide kubectl command to rollout restart deployment myapp", "plan": {"type": "cli", "content": "kubectl rollout restart deployment myapp"}, "duration_s": 1.164921522140503}
{"prompt": "Create deployment named 123-invalid-name using nginx (test label validation)", "plan": {"type": "yaml", "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: 123-invalid-name\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: 123-invalid-name\n  template:\n    metadata:\n      labels:\n        app: 123-invalid-name\n    spec:\n      containers:\n      - name: nginx\n        image: nginx"}, "duration_s": 2.8675923347473145}
{"prompt": "Deploy an app with no image specified (should request clarification)", "plan": {"type": "cli", "content": "echo 'Image not specified for deployment. Please provide an image name.'"}, "duration_s": 1.1261451244354248}
{"prompt": "Create a cronjob that runs echo hello every minute", "plan": {"type": "yaml", "content": "apiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: echo-hello\nspec:\n  schedule: \"* * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: echo\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - echo hello\n          restartPolicy: OnFailure"}, "duration_s": 2.7643494606018066}
{"prompt": "Provide YAML for a ConfigMap storing app settings", "plan": {"type": "yaml", "content": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-settings\ndata:\n  setting1: value1\n  setting2: value2"}, "duration_s": 1.6386220455169678}
